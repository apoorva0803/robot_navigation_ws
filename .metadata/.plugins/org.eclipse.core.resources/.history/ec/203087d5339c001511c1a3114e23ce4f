package ui;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.AffineTransform;
import java.awt.geom.Arc2D;
import java.awt.geom.Area;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.swing.ImageIcon;
import javax.swing.JPanel;

import util.ShapeUtils;
import model.Board;
import model.Coordinates;

/**
 * Draw board positions obstacle, start and goal state on UI
 * Obstacle shape is as per user choice - Polygons and circle 
 * @author apoorva
 *
 */
public class DrawBoard extends JPanel {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Image robotImage;
	Board board = Board.getBoardInstance();
	Arc2D vision;

	@Override
	public void paint(Graphics g){
		
		
		super.paintComponent( g );
		Graphics2D g2d = (Graphics2D)g.create();
		loadImage();
		if(board.isFileOpen()){
			g2d.drawImage(robotImage, board.getStart().getX(), board.getStart().getY(), this);
			g2d.drawString("Goal", board.getGoal().getX(), board.getGoal().getY());
			ShapeUtils.drawObstacle(g);
			ShapeUtils.drawCircularObstacle(g);
			//drawObstacle(g2d);
			vision=ShapeUtils.drawArc(board.getStart(),g2d);
		}else{		
			g2d.drawImage(robotImage, 0, 400, this);
		}
		g2d.dispose();
		repaint();
		obsession();
	} 

	public void obsession(){
		if(board.isFileOpen()) ShapeUtils.intersectObstacle();
	}



	private Image loadImage(){
		ImageIcon robotIcon = new ImageIcon(this.getClass().getResource("/images/Robot_opt.png"));
		return robotImage = robotIcon.getImage(); 
	}
}
